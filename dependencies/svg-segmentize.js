/* (c) Robby Kraft, MIT License */
(function(a,b){"object"==typeof exports&&"undefined"!=typeof module?b(exports):"function"==typeof define&&define.amd?define(["exports"],b):b(a.Segmentize={})})(this,function(a){"use strict";var b=Math.sin,c=Math.cos,d=Math.PI;const e=64,f=64,g=function(a){return Array.from(a.points).map(a=>[a.x,a.y]).map((b,c,d)=>[d[c][0],d[c][1],d[(c+1)%d.length][0],d[(c+1)%d.length][1]])},h={line:function(a){return[[a.x1.baseVal.value,a.y1.baseVal.value,a.x2.baseVal.value,a.y2.baseVal.value]]},rect:function(a){let b=a.x.baseVal.value,c=a.y.baseVal.value,d=a.width.baseVal.value,e=a.height.baseVal.value;return[[b,c,b+d,c],[b+d,c,b+d,c+e],[b+d,c+e,b,c+e],[b,c+e,b,c]]},circle:function(a){let f=a.cx.baseVal.value,g=a.cy.baseVal.value,h=a.r.baseVal.value;return Array.from(Array(e)).map((a,j)=>[f+h*c(2*(j/e*d)),g+h*b(2*(j/e*d))]).map((a,b,c)=>[c[b][0],c[b][1],c[(b+1)%c.length][0],c[(b+1)%c.length][1]])},ellipse:function(a){let f=a.cx.baseVal.value,g=a.cy.baseVal.value,h=a.rx.baseVal.value,j=a.ry.baseVal.value;return Array.from(Array(e)).map((a,k)=>[f+h*c(2*(k/e*d)),g+j*b(2*(k/e*d))]).map((a,b,c)=>[c[b][0],c[b][1],c[(b+1)%c.length][0],c[(b+1)%c.length][1]])},polygon:g,polyline:function(a){let b=g(a);return b.pop(),b},path:function(a){let b=a.getAttribute("d"),c="Z"===b[b.length-1]||"z"===b[b.length-1],d=c?a.getTotalLength()/f:a.getTotalLength()/(f-1),e=Array.from(Array(f)).map((b,c)=>a.getPointAtLength(c*d)).map(a=>[a.x,a.y]),g=e.map((b,c,d)=>[d[c][0],d[c][1],d[(c+1)%d.length][0],d[(c+1)%d.length][1]]);return c||g.pop(),g}},i=Object.keys(h),j="http://www.w3.org/2000/svg",k=["version","xmlns","contentScriptType","contentStyleType","baseProfile","class","externalResourcesRequired","x","y","width","height","viewBox","preserveAspectRatio","zoomAndPan","style"],l={line:["x1","y1","x2","y2"],rect:["x","y","width","height"],circle:["cx","cy","r"],ellipse:["cx","cy","rx","ry"],polygon:["points"],polyline:["points"],path:["d"]},m=function(a){return"g"===a.tagName||"svg"===a.tagName?Array.from(a.children).map(a=>m(a)).reduce((c,a)=>c.concat(a),[]):[a]},n=function(b){return Array.from(b.attributes).filter(c=>-1===l[b.tagName].indexOf(c.name))};a.svg=function(b){let c=document.createElementNS(j,"svg");k.map(c=>({attribute:c,value:b.getAttribute(c)})).filter(a=>null!=a.value).forEach(a=>c.setAttribute(a.attribute,a.value)),null===c.getAttribute("xmlns")&&c.setAttribute("xmlns",j);let d=m(b),e=d.filter(a=>"style"===a.tagName||"defs"===a.tagName);0<e.length&&e.map(a=>a.cloneNode(!0)).forEach(a=>c.appendChild(a));let f=d.filter(a=>-1!==i.indexOf(a.tagName)).map(a=>h[a.tagName](a).map(b=>[...b,n(a)])).reduce((c,a)=>c.concat(a),[]);return f.forEach(a=>{let b=document.createElementNS(j,"line");b.setAttributeNS(null,"x1",a[0]),b.setAttributeNS(null,"y1",a[1]),b.setAttributeNS(null,"x2",a[2]),b.setAttributeNS(null,"y2",a[3]),null!=a[4]&&a[4].forEach(a=>b.setAttribute(a.nodeName,a.nodeValue)),c.appendChild(b)}),c},a.segments=function(a){return m(a).filter(a=>-1!==i.indexOf(a.tagName)).map(a=>h[a.tagName](a)).reduce((c,a)=>c.concat(a),[])},Object.defineProperty(a,"__esModule",{value:!0})});
